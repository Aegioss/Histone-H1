clustering_distance_rows = dist_from_spearman,
clustering_distance_cols = dist_from_spearman,
annotation_row = annotation,
annotation_col = annotation,
col = plasma(256))
RnaDdsNormalized$gene_name <- rownames(RnaDdsNormalized)
RnaDdsNormalized.long <-
melt(RnaDdsNormalized[,grepl("^RNA", colnames(RnaDdsNormalized)) | colnames(RnaDdsNormalized) == "gene_name"],
id.vars = "gene_name",
variable_name = "sample_name")
colnames(RnaDdsNormalized.long)[3] <- "normalized_count"
RnaDdsNormalized.long <- merge(RnaDdsNormalized.long, description_file)
head(RnaDdsNormalized.long)
#RnaDdsNormalized.long$Genotype <- factor(RnaDdsNormalized.long$Genotype, levels = c("WT", "LOW", "GapRWT"))
p1 <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name=="ENSMUSG00000085794.5",], aes(x=Genotype, y=normalized_count)) +
geom_violin() +
scale_y_log10() +
geom_jitter(aes(colour = Colonies)) +
theme_classic()
p2 <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name=="ENSMUSG00000085794.5",], aes(x=Genotype, y=normalized_count)) +
geom_violin() +
geom_jitter(aes(colour = Colonies)) +
theme_classic()
p1 + p2
top10_upregRna <- rownames(top_upregRNA[1:10,])
for (gene in top10_upregRna) {
p <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of",
MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
top10_downregRna <- rownames(top_downregRNA[1:10,])
for (gene in top10_downregRna) {
p <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of",
MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
TTresVolcPlot <- TTResNoNa[order(TTResNoNa$padj),]
TTresVolcPlot$diffexpressed <- "NO"
TTresVolcPlot$diffexpressed[TTresVolcPlot$log2FoldChange > foldchange_threeshold & TTresVolcPlot$padj < padj_threeshold] <- "UP"
TTresVolcPlot$diffexpressed[TTresVolcPlot$log2FoldChange < -foldchange_threeshold & TTresVolcPlot$padj < padj_threeshold] <- "DOWN"
ggplot(data = TTresVolcPlot,
aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-foldchange_threeshold, foldchange_threeshold), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(padj_threeshold), col = "gray", linetype = 'dashed') +
labs(title="Volcano Plot Of STAR TT-seq",
color = 'Category',
x = expression("log"[2]*"(FC)"),
y = expression("-log"[10]*"(padj)")) +
scale_x_continuous(breaks = seq(-14, 14, 2)) +
geom_point(size = 1) +
scale_color_manual(values = c("#00AFBB", "grey", "#FFDB6D"),
labels = c("Downregulated", "Not significant", "Upregulated"))+
theme_classic()
TTUpReg <- TTresVolcPlot[TTresVolcPlot$diffexpressed=="UP",][,1:6]
TTDownReg <- TTresVolcPlot[TTresVolcPlot$diffexpressed=="DOWN",][,1:6]
TTUpReg$neg_log10_padj <- -log10(TTUpReg$padj)
TTDownReg$neg_log10_padj <- -log10(TTDownReg$padj)
TTUpRegSorted <- TTUpReg[order(-TTUpReg$log2FoldChange, -TTUpReg$neg_log10_padj),]
TTDownRegSorted <- TTDownReg[order(TTDownReg$log2FoldChange, -TTDownReg$neg_log10_padj),]
top_upregTT <- head(TTUpRegSorted, 20)
top_downregTT <- head(TTDownRegSorted, 20)
top_upregTT$gene <- MusGeneNames$gene_name[match(rownames(top_upregTT), MusGeneNames$gene_id)]
top_upregTT$gene <- factor(top_upregTT$gene, levels = rev(top_upregTT$gene))
top_downregTT$gene <- MusGeneNames$gene_name[match(rownames(top_downregTT), MusGeneNames$gene_id)]
top_downregTT$gene <- factor(top_downregTT$gene, levels = rev(top_downregTT$gene))
TTUpDegsList <- rownames(top_upregTT)
TTDownDegsList <- rownames(top_downregTT)
ggplot(top_upregTT, aes(x = gene, y = log2FoldChange)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Most Upregulated Genes [STAR TT-seq]", x = "Gene", y = "log2 Fold Change") +
theme_minimal()
ggplot(top_downregTT, aes(x = gene, y = log2FoldChange)) +
geom_bar(stat = "identity", fill = "firebrick") +
coord_flip() +
labs(title = "Most Downregulated Genes [STAR TT-seq]", x = "Gene", y = "log2 Fold Change") +
theme_minimal()
TTDdsNormalized <- data.frame(counts(ttseq_dds, normalize=TRUE))
TTDdsNormalized$WT_Mean <- unlist(apply(TTDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="WT",])], 1, mean))
TTDdsNormalized$LOW_Mean <- unlist(apply(TTDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="LOW",])], 1, mean))
TTDdsNormalized$WT_std <- unlist(apply(TTDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="WT",])], 1, sd))
TTDdsNormalized$LOW_std <- unlist(apply(TTDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="LOW",])], 1, sd))
TTDdsNormalizedFiltered <- TTDdsNormalized %>% filter(WT_Mean > 0,
(WT_Mean - WT_std > 0),
LOW_Mean > 0,
(LOW_Mean - LOW_std > 0))
TTResNoNa$index <- rownames(TTResNoNa)
TTDdsNormalizedFiltered$index <- rownames(TTDdsNormalizedFiltered)
TTDdsNormalizedFiltered <- merge(TTDdsNormalizedFiltered, data.frame(TTResNoNa[,c(7,10)]), by="index")
rownames(TTDdsNormalizedFiltered) <- TTDdsNormalizedFiltered$index
TTDdsNormalizedFiltered <- TTDdsNormalizedFiltered[,2:length(TTDdsNormalizedFiltered)]
ggplot(TTDdsNormalizedFiltered, aes(x= WT_Mean, y= LOW_Mean, col = significant)) +
geom_point(size=1, alpha = 0.6) +
scale_y_log10() +
scale_x_log10() +
labs( title = "Scatter plot of STAR TT-seq",
color = 'Category',
x = expression("Log"[10]*"(meanExpression) in WT"),
y = expression("Log"[10]*"(meanExpression) in LOW")) +
geom_density2d(col="red") +
scale_color_manual(values = c("black", "blue"),
labels = c("Not Significant", "Significant"))+
#geom_errorbar(data = RnaDdsNormalizedFiltered[1:50,] ,aes(ymin = LOW_Mean - LOW_std, ymax = LOW_Mean + LOW_std), width = 0.1, alpha = 0.2) +
#geom_errorbarh(aes(xmin = WT_Mean - WT_std, xmax = WT_Mean + WT_std), height = 0.1, alpha = 0.2) +
theme_classic()
TTannotation <- data.frame(Genotype = ttseq_description$Genotype)
rownames(TTannotation) <- rownames(ttseq_description)
TTspearman_correlation_matrix <- cor(TTDdsNormalized[,grepl("^RNA", colnames(TTDdsNormalized))], method = "spearman")
TTdist_from_spearman <- as.dist(1-TTspearman_correlation_matrix)
TTdist_matrix <- as.matrix(TTdist_from_spearman)
pheatmap(TTdist_matrix,
clustering_distance_rows = TTdist_from_spearman,
clustering_distance_cols = TTdist_from_spearman,
annotation_row = TTannotation,
annotation_col = TTannotation,
col = plasma(256))
TTDdsNormalized$gene_name <- rownames(TTDdsNormalized)
TTDdsNormalized.long <-
melt(TTDdsNormalized[,grepl("^RNA", colnames(TTDdsNormalized)) | colnames(TTDdsNormalized) == "gene_name"],
id.vars = "gene_name",
variable_name = "sample_name")
colnames(TTDdsNormalized.long)[3] <- "normalized_count"
TTDdsNormalized.long <- merge(TTDdsNormalized.long, ttseq_description, by="sample_name")
head(TTDdsNormalized.long)
top10_upregTT <- rownames(top_upregTT[1:10,])
for (gene in top10_upregTT) {
p <- ggplot(TTDdsNormalized.long[TTDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of", MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
top10_downregTT <- rownames(top_downregTT[1:10,])
for (gene in top10_downregTT) {
p <- ggplot(TTDdsNormalized.long[TTDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of", MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
TTBowtieResVolcPlot <- TTResBowtieNoNa[order(TTResBowtieNoNa$padj),]
TTBowtieResVolcPlot$diffexpressed <- "NO"
TTBowtieResVolcPlot$diffexpressed[TTBowtieResVolcPlot$log2FoldChange > foldchange_threeshold & TTBowtieResVolcPlot$padj < padj_threeshold] <- "UP"
TTBowtieResVolcPlot$diffexpressed[TTBowtieResVolcPlot$log2FoldChange < -foldchange_threeshold & TTBowtieResVolcPlot$padj < padj_threeshold] <- "DOWN"
ggplot(data = TTBowtieResVolcPlot,
aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-foldchange_threeshold, foldchange_threeshold), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(padj_threeshold), col = "gray", linetype = 'dashed') +
labs(title="Volcano Plot Of Bowtie2 TT-seq",
color = 'Category',
x = expression("Log"[2]*"(FC)"),
y = expression("-Log"[10]*"(padj)")) +
scale_x_continuous(breaks = seq(-14, 14, 2)) +
geom_point(size = 1) +
scale_color_manual(values = c("#00AFBB", "grey", "#FFDB6D"),
labels = c("Downregulated", "Not significant", "Upregulated"))+
theme_classic()
TTBowtieUpReg <- TTBowtieResVolcPlot[TTBowtieResVolcPlot$diffexpressed=="UP",][,1:6]
TTBowtieDownReg <- TTBowtieResVolcPlot[TTBowtieResVolcPlot$diffexpressed=="DOWN",][,1:6]
TTBowtieUpReg$neg_log10_padj <- -log10(TTBowtieUpReg$padj)
TTBowtieDownReg$neg_log10_padj <- -log10(TTBowtieDownReg$padj)
TTBowtieUpRegSorted <- TTBowtieUpReg[order(-TTBowtieUpReg$log2FoldChange, -TTBowtieUpReg$neg_log10_padj),]
TTBowtieDownRegSorted <- TTBowtieDownReg[order(TTBowtieDownReg$log2FoldChange, -TTBowtieDownReg$neg_log10_padj),]
top_upregTTBowtie <- head(TTBowtieUpRegSorted, 20)
top_downregTTBowtie <- head(TTBowtieDownRegSorted, 20)
top_upregTTBowtie$gene <- MusGeneNames$gene_name[match(rownames(top_upregTTBowtie), MusGeneNames$gene_id)]
top_upregTTBowtie$gene <- factor(top_upregTTBowtie$gene, levels = rev(top_upregTTBowtie$gene))
top_downregTTBowtie$gene <- MusGeneNames$gene_name[match(rownames(top_downregTTBowtie), MusGeneNames$gene_id)]
top_downregTTBowtie$gene <- factor(top_downregTTBowtie$gene, levels = rev(top_downregTTBowtie$gene))
TTBowtieUpDegsList <- rownames(top_upregTTBowtie)
TTBowtieDownDegsList <- rownames(top_downregTTBowtie)
ggplot(top_upregTTBowtie, aes(x = gene, y = log2FoldChange)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Most Upregulated Genes [Bowtie2 TT-seq]", x = "Gene", y = "log2 Fold Change") +
theme_minimal()
ggplot(top_downregTT, aes(x = gene, y = log2FoldChange)) +
geom_bar(stat = "identity", fill = "firebrick") +
coord_flip() +
labs(title = "Most Downregulated Genes [Bowtie2 TT-seq]", x = "Gene", y = "log2 Fold Change") +
theme_minimal()
TTBowtieDdsNormalized <- data.frame(counts(ttseq_dds, normalize=TRUE))
TTBowtieDdsNormalized$WT_Mean <- unlist(apply(TTBowtieDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="WT",])], 1, mean))
TTBowtieDdsNormalized$LOW_Mean <- unlist(apply(TTBowtieDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="LOW",])], 1, mean))
TTBowtieDdsNormalized$WT_std <- unlist(apply(TTBowtieDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="WT",])], 1, sd))
TTBowtieDdsNormalized$LOW_std <- unlist(apply(TTBowtieDdsNormalized[,rownames(ttseq_description[ttseq_description$Genotype=="LOW",])], 1, sd))
TTBowtieDdsNormalizedFiltered <- TTBowtieDdsNormalized %>% filter(WT_Mean > 0,
(WT_Mean - WT_std > 0),
LOW_Mean > 0,
(LOW_Mean - LOW_std > 0))
TTResBowtieNoNa$index <- rownames(TTResBowtieNoNa)
TTBowtieDdsNormalizedFiltered$index <- rownames(TTBowtieDdsNormalizedFiltered)
TTBowtieDdsNormalizedFiltered <- merge(TTBowtieDdsNormalizedFiltered, data.frame(TTResBowtieNoNa[,c(7,10)]), by="index")
rownames(TTBowtieDdsNormalizedFiltered) <- TTBowtieDdsNormalizedFiltered$index
TTBowtieDdsNormalizedFiltered <- TTBowtieDdsNormalizedFiltered[,2:length(TTBowtieDdsNormalizedFiltered)]
ggplot(TTBowtieDdsNormalizedFiltered, aes(x= WT_Mean, y= LOW_Mean, col = significant)) +
geom_point(size=1, alpha = 0.6) +
scale_y_log10() +
scale_x_log10() +
labs( title = "Scatter plot of STAR TT-seq",
color = 'Category',
x = expression("Log"[10]*"(meanExpression) in WT"),
y = expression("Log"[10]*"(meanExpression) in LOW")) +
geom_density2d(col="red") +
scale_color_manual(values = c("black", "blue"),
labels = c("Not Significant", "Significant"))+
#geom_errorbar(data = RnaDdsNormalizedFiltered[1:50,] ,aes(ymin = LOW_Mean - LOW_std, ymax = LOW_Mean + LOW_std), width = 0.1, alpha = 0.2) +
#geom_errorbarh(aes(xmin = WT_Mean - WT_std, xmax = WT_Mean + WT_std), height = 0.1, alpha = 0.2) +
theme_classic()
TTBowtieannotation <- data.frame(Genotype = ttseq_description$Genotype)
rownames(TTBowtieannotation) <- rownames(ttseq_description)
TTBowtieSpearman_correlation_matrix <- cor(TTBowtieDdsNormalized[,grepl("^RNA", colnames(TTBowtieDdsNormalized))], method = "spearman")
TTBowtiedist_from_spearman <- as.dist(1-TTBowtieSpearman_correlation_matrix)
TTBowtiedist_matrix <- as.matrix(TTBowtiedist_from_spearman)
pheatmap(TTBowtiedist_matrix,
clustering_distance_rows = TTBowtiedist_from_spearman,
clustering_distance_cols = TTBowtiedist_from_spearman,
annotation_row = TTBowtieannotation,
annotation_col = TTBowtieannotation,
col = plasma(256))
TTBowtieDdsNormalized$gene_name <- rownames(TTBowtieDdsNormalized)
TTBowtieDdsNormalized.long <-
melt(TTDdsNormalized[,grepl("^RNA", colnames(TTBowtieDdsNormalized)) | colnames(TTBowtieDdsNormalized) == "gene_name"],
id.vars = "gene_name",
variable_name = "sample_name")
colnames(TTBowtieDdsNormalized.long)[3] <- "normalized_count"
TTBowtieDdsNormalized.long <- merge(TTBowtieDdsNormalized.long, ttseq_description, by="sample_name")
head(TTBowtieDdsNormalized.long)
top10_upregTTBowtie <- rownames(top_upregTTBowtie[1:10,])
for (gene in top10_upregTTBowtie) {
p <- ggplot(TTBowtieDdsNormalized.long[TTBowtieDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of", MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
top10_downregTTBowtie <- rownames(top_downregTTBowtie[1:10,])
for (gene in top10_downregTTBowtie) {
p <- ggplot(TTBowtieDdsNormalized.long[TTBowtieDdsNormalized.long$gene_name == gene, ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression of", MusGeneNames$gene_name[MusGeneNames$gene_id == gene]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
print(p)
}
p <- ggplot(TTBowtieDdsNormalized.long[TTBowtieDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression in Bowtie2 TT-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p1 <- ggplot(TTDdsNormalized.long[TTDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression in STAR TT-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p2 <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Expression in RNA-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p+p1+p2
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA,
y = log2FoldChangeTT
)) +
geom_point(size = 1) +
#coord_cartesian(ylim = c(-5, 5)) +
theme_classic() +
geom_density2d(col="red")
RnaUpRegSorted
RnaDownRegSorted
TTUpRegSorted
TTDownRegSorted
TTBowtieUpRegSorted
TTBowtieDownRegSorted
p <- ggplot(TTBowtieDdsNormalized.long[TTBowtieDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("Bowtie2 TT-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p1 <- ggplot(TTDdsNormalized.long[TTDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("STAR TT-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p2 <- ggplot(RnaDdsNormalized.long[RnaDdsNormalized.long$gene_name == top10_downregTTBowtie[1], ],
aes(x = Genotype, y = normalized_count)) +
geom_boxplot(width = 0.1, alpha = 0.5, aes(fill = Genotype)) +
geom_jitter(aes(colour = Colonies), width = 0.2, size = 1.5) +
labs(title = paste("RNA-seq of", MusGeneNames$gene_name[MusGeneNames$gene_id == top10_downregTTBowtie[1]]),
y = expression("Normalized Counts"),
x = "Genotype") +
theme_classic()
p+p1+p2
View(description_file)
View(description_file)
library(tximport)
BiocManager::install("tximport")
library(tximport)
library(readr)
library(tximportData)
BiocManager::install("tximportData")
library(tximport)
library(tximport)
library(readr)
library(tximportData)
library(DESeq2)
library(GenomicRanges)
library(dplyr)
library(txdbmaker)
library(viridis)
library(patchwork)
library(tidyverse)
library(RColorBrewer)
library(rtracklayer)
library(reshape2)
library(tximport)
library(readr)
library(tximportData)
library(DESeq2)
library(GenomicRanges)
library(dplyr)
library(txdbmaker)
library(viridis)
library(patchwork)
library(tidyverse)
library(RColorBrewer)
library(rtracklayer)
library(reshape2)
library(ggrepel)
library(pheatmap)
library(karyoploteR)
bowtie_matrix <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/BowtieQ30_counts_matrix.csv", header = TRUE, sep = ",")
star_matrix <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/STARQ30_counts_matrix.csv", header = TRUE, sep = ",")
description_file <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/Ashish.SampleDescription.csv", header = TRUE, sep = ",")
gtf_file <- import("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/chR_TrExAdded.gtf")
latest_gtf <- import("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/rsem_9_06_25_filtered.gtf")
description_file$Genotype <- factor(description_file$Genotype, levels = c("WT", "LOW", "GapRWT"))
colnames(bowtie_matrix)[grepl("^RNA", colnames(bowtie_matrix))] <-
gsub("B.*$", "", colnames(bowtie_matrix)[grepl("^RNA", colnames(bowtie_matrix))])
colnames(star_matrix)[grepl("^RNA", colnames(star_matrix))] <-
gsub("Star.*$", "", colnames(star_matrix)[grepl("^RNA", colnames(star_matrix))])
rownames(description_file) <- colnames(star_matrix)[grepl("^RNA", colnames(star_matrix))]
description_file$sample_name <- rownames(description_file)
rownames(star_matrix) <- star_matrix$X
rownames(bowtie_matrix) <- bowtie_matrix$X
star_matrix <- star_matrix[, -1]
bowtie_matrix <- bowtie_matrix[, -1]
head(star_matrix)
head(bowtie_matrix)
head(description_file)
rnaseq_description <- description_file[1:12,]
ttseq_description <- description_file[13:24,]
star_rnaseq <- star_matrix[, rownames(rnaseq_description)]
star_ttseq <- star_matrix[, rownames(ttseq_description)]
bowtie_ttseq <- bowtie_matrix[, rownames(ttseq_description)]
head(star_ttseq)
head(bowtie_ttseq)
ttseq_description
gtf_genes <- gtf_file[gtf_file$type == "gene", ]
MusMusculus_Genes <- gtf_genes[grep("^ENS", gtf_genes$gene_id), ]
MusGeneNames <- unique(data.frame(mcols(MusMusculus_Genes[,c("gene_id", "gene_name")])))
head(MusGeneNames)
base_dir <- "/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/SalmonRNA/QuantOutput_gcBias"
files <- file.path(base_dir, paste0(rnaseq_description$sample_name, "_quant"), "quant.sf")
names(files) <- rnaseq_description$sample_name
tx2gene <- read_csv(file.path(base_dir, "tx2gene.rsem.filtered.csv"), show_col_types = FALSE)
txi_tx <- tximport(files, type="salmon", txOut=TRUE)
head(tx2gene)
TTbase_dir <- "/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/SalmonTT/QuantOutput"
TTfiles <- file.path(TTbase_dir, paste0(ttseq_description$sample_name, "_quant"), "quant.sf")
names(TTfiles) <- ttseq_description$sample_name
TTtx2gene <- read_csv(file.path(base_dir, "tx2gene.rsem.filtered.csv"), show_col_types = FALSE)
TTtxi_tx <- tximport(TTfiles, type="salmon", txOut=TRUE)
head(TTtx2gene)
gtf_mono_exon <- latest_gtf
exons_gtf <- gtf_mono_exon[gtf_mono_exon$type == "exon"]
df_subset <- as.data.frame(exons_gtf)
exon_counts <- df_subset %>%
group_by(transcript_id) %>%
summarise(exon_count = n()) %>%
filter(exon_count == 1)
mono_exon_id <- exon_counts$transcript_id
mono_exon_id <- mono_exon_id[grepl("^ENS", mono_exon_id)]
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = ",")
input_chromosome_reads
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
input_chromosome_reads
input_chromosome_reads
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1])
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
input_chromosome_reads
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
rownames(input_chromosome_reads) <- input_chromosome_reads$Chr
input_chromosome_reads <- input_chromosome_reads[,-1]
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
rownames(input_chromosome_reads) <- input_chromosome_reads$Chr
input_chromosome_reads <- input_chromosome_reads[,-1]
input_chromosome_reads
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
desired_order <- paste0("chr", c(1:19, "X", "Y", "M", "R"))
input_chromosome_reads$Chr <- factor(input_chromosome_reads$Chr, levels = desired_order, ordered = TRUE)
input_chromosome_reads <- input_chromosome_reads[order(input_chromosome_reads$Chr)]
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
desired_order <- paste0("chr", c(1:19, "X", "Y", "M", "R"))
input_chromosome_reads$Chr <- factor(input_chromosome_reads$Chr, levels = desired_order, ordered = TRUE)
input_chromosome_reads <- input_chromosome_reads[order(input_chromosome_reads$Chr),]
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
rownames(input_chromosome_reads) <- input_chromosome_reads$Chr
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
desired_order <- paste0("chr", c(1:19, "X", "Y", "M", "R"))
input_chromosome_reads$Chr <- factor(input_chromosome_reads$Chr, levels = desired_order, ordered = TRUE)
input_chromosome_reads <- input_chromosome_reads[order(input_chromosome_reads$Chr),]
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
rownames(input_chromosome_reads) <- input_chromosome_reads$Chr
input_chromosome_reads <- read.csv("/home/franck/SCRATCH/fpan/INPUT_WORK/H1_TFs_ChIP/INPUT_CHR_READS_DIST.csv", header = TRUE, sep = "\t")
desired_order <- c(paste0("chr", c(1:19, "X", "Y", "M", "R")), "Total")
input_chromosome_reads$Chr <- factor(input_chromosome_reads$Chr, levels = desired_order, ordered = TRUE)
input_chromosome_reads <- input_chromosome_reads[order(input_chromosome_reads$Chr),]
input_chromosome_reads[nrow(input_chromosome_reads)+1,] <- c("Total", colSums(input_chromosome_reads[,-1]))
rownames(input_chromosome_reads) <- input_chromosome_reads$Chr
input_chromosome_reads <- input_chromosome_reads[,-1]
input_chromosome_reads
BiocManager::install("limma")
install.packages("data.table")
install.packages('haven')
install.packages("data.table", type = "source")
install.packages("data.table", type = "source")
install.packages("data.table", type = "source")
BiocManager::install("limma")
setwd("~/SCRATCH/fpan/Script")
renv::activate()
renv::restore()
pwd
getwd()
renv::activate()
renv::status()
renv::activate()
library(limma)
library(tximport)
library(readr)
library(tximportData)
library(DESeq2)
library(ggplot2)
library(GenomicRanges)
library(dplyr)
library(txdbmaker)
library(viridis)
library(patchwork)
library(tidyverse)
setwd("~/SCRATCH/fpan/Script")
library(RColorBrewer)
library(rtracklayer)
library(reshape2)
library(ggrepel)
library(pheatmap)
library(karyoploteR)
bowtie_matrix <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/BowtieQ30_counts_matrix.csv", header = TRUE, sep = ",")
star_matrix <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/STARQ30_counts_matrix.csv", header = TRUE, sep = ",")
description_file <- read.csv("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/Ashish.SampleDescription.csv", header = TRUE, sep = ",")
gtf_file <- import("/home/franck/SCRATCH/fpan/Genome_Index/chR_index_files/chR_TrExAdded.gtf")
