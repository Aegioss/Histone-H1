head(gtf_tpm)
gtf_covTr <- gtf_genes[gtf_genes$gene_id %in% unique(MusGeneNames$gene_id)]
mcols(gtf_covTr) <- mcols(gtf_covTr)[, "gene_id", drop = FALSE]
mcols(gtf_covTr) <- trdf[gtf_covTr$gene_id, colnames(trdf)]
head(gtf_covTr)
height_per_sample <- 1 / length(mus_chrs)
for(i in seq_along(mus_chrs)){
nth_chr <- mus_chrs[i]
chr_genes <- gtf_tpm[seqnames(gtf_tpm)==nth_chr]
bin_size <- 1e6
chr_length <- width(custom.genome)[i]
bins <- tileGenome(seqlengths = setNames(chr_length, nth_chr),
tilewidth = bin_size,
cut.last.tile.in.chrom = TRUE)
r <- 0
kp <- plotKaryotype(genome=custom.genome, chromosomes=nth_chr, cytobands=cyto, plot.type=4)
for(sample in grep("^RNA", colnames(mcols(chr_genes)), value = TRUE)){
hits <- findOverlaps(bins, chr_genes)
sum_expr <- tapply(mcols(chr_genes)[[sample]][subjectHits(hits)],
queryHits(hits), sum, na.rm=TRUE)
expr_bins <- bins[as.numeric(names(sum_expr))]
expr_bins$expr <- sum_expr
#kpArea(kp, data=expr_bins, y=expr_bins$expr, ymax = max(expr_bins$expr) * 1.1, col = rgb(34/255, 139/255, 34/255, alpha = 0.6), border=NA)
kpLines(kp, chr=nth_chr, data = expr_bins, y=expr_bins$expr, ymin= 0, ymax = max(expr_bins$expr) * 1.1, col="forestgreen", lwd=2, r0 = r,
r1 = r + height_per_sample)
kpPoints(kp, data=expr_bins, y=expr_bins$expr, ymin= 0, ymax = max(expr_bins$expr) * 1.1, col="blue", cex=0.5, r0 = r, r1 = r + height_per_sample)
kpAddLabels(kp, labels = substr(sample, nchar(sample)-1, nchar(sample)), r0 = r, r1 = r + height_per_sample,
cex = 0.7, srt = 0, label.margin = 0.01)
r <- r + height_per_sample
}
}
interest <- c("RNA_S11589Nr69","RNA_S11589Nr71")
gap_ratio <- 0.1
n_tracks <- length(interest)
height_per_sample <- (1 - (n_tracks - 1) * gap_ratio) / n_tracks
for(i in seq_along(mus_chrs)){
nth_chr <- mus_chrs[i]
chr_genes <- gtf_tpm[seqnames(gtf_tpm)==nth_chr]
bin_size <- 1e6
chr_length <- width(custom.genome)[i]
bins <- tileGenome(seqlengths = setNames(chr_length, nth_chr),
tilewidth = bin_size,
cut.last.tile.in.chrom = TRUE)
r <- 0
kp <- plotKaryotype(genome=custom.genome, chromosomes=nth_chr, cytobands=cyto, plot.type=4)
for(sample in interest){
hits <- findOverlaps(bins, chr_genes)
sum_expr <- tapply(mcols(chr_genes)[[sample]][subjectHits(hits)],
queryHits(hits), sum, na.rm=TRUE)
expr_bins <- bins[as.numeric(names(sum_expr))]
expr_bins$expr <- sum_expr
kpArea(kp, data=expr_bins, y=expr_bins$expr, ymax = max(expr_bins$expr) * 1.1, col = rgb(34/255, 139/255, 34/255, alpha = 0.6),
border=NA, r0 = r, r1 = r + height_per_sample)
kpLines(kp, chr=nth_chr, data = expr_bins, y=expr_bins$expr, ymin= 0, ymax = max(expr_bins$expr) * 1.1, col="forestgreen", lwd=2, r0 = r,
r1 = r + height_per_sample)
kpPoints(kp, data=expr_bins, y=expr_bins$expr, ymin= 0, ymax = max(expr_bins$expr) * 1.1, col="blue", cex=0.5,
r0 = r, r1 = r + height_per_sample)
kpAddLabels(kp, labels = substr(sample, nchar(sample)-1, nchar(sample)), r0 = r - height_per_sample * 0.1,
r1 = r , cex = 0.7, srt = 0, label.margin = 0.01, pos = 1)
kpAxis(kp, ymin = 0, ymax = max(expr_bins$expr) * 1.1, r0 = r, r1 = r + height_per_sample, cex = 1, numticks = 4)
r <- r + height_per_sample + gap_ratio
}
}
interest <- c("RNA_S11589Nr69","RNA_S11589Nr71")
height_per_sample <- 1 / length(interest)
for(i in seq_along(mus_chrs)){
nth_chr <- mus_chrs[i]
chr_genes <- gtf_tpm[seqnames(gtf_tpm)==nth_chr]
bin_size <- 1e6
chr_length <- width(custom.genome)[i]
bins <- tileGenome(seqlengths = setNames(chr_length, nth_chr),
tilewidth = bin_size,
cut.last.tile.in.chrom = TRUE)
r <- 0
expr_list <- GRangesList()
kp <- plotKaryotype(genome=custom.genome, chromosomes=nth_chr, cytobands=cyto, plot.type=4)
for(sample in interest){
hits <- findOverlaps(bins, chr_genes)
sum_expr <- tapply(mcols(chr_genes)[[sample]][subjectHits(hits)],
queryHits(hits), sum, na.rm=TRUE)
expr_bins <- bins[as.numeric(names(sum_expr))]
expr_bins$expr <- sum_expr
expr_list[[sample]] <- expr_bins
}
max_y = max(expr_list[[interest[1]]]$expr, expr_list[[interest[2]]]$expr)
kpArea(kp, data=expr_list[[interest[1]]], y=expr_list[[interest[1]]]$expr, ymax = max_y * 1.1, col = rgb(34/255, 139/255, 34/255, alpha = 0.6),
border=NA, r0 = r, r1 = r + 0.4)
kpLines(kp, chr=nth_chr, data = expr_list[[interest[1]]], y=expr_list[[interest[1]]]$expr, ymin= 0, ymax = max_y * 1.1, col="forestgreen",
lwd=2, r0 = r,
r1 = r + 0.4)
kpPoints(kp, data=expr_list[[interest[1]]], y=expr_list[[interest[1]]]$expr, ymin= 0, ymax = max_y * 1.1, col="blue",
cex=0.5, r0 = r, r1 = r + 0.4)
kpAddLabels(kp, labels = substr(interest[1], nchar(interest[1])-1, nchar(interest[1])), r0 = r,
r1 = r + 0.4, cex = 0.7, srt = 0, label.margin = 0.01)
kpArea(kp, data=expr_list[[interest[2]]], y=expr_list[[interest[2]]]$expr, ymax = max_y * 1.1, col = rgb(34/255, 139/255, 34/255, alpha = 0.6),
border=NA, r0 = 0.6, r1 = 1)
kpLines(kp, chr=nth_chr, data = expr_list[[interest[2]]], y=expr_list[[interest[2]]]$expr, ymin= 0, ymax = max_y * 1.1, col="forestgreen",
lwd=2, r0 = 0.6,
r1 = 1)
kpPoints(kp, data=expr_list[[interest[2]]], y=expr_list[[interest[2]]]$expr, ymin= 0, ymax = max_y * 1.1, col="blue",
cex=0.5, r0 = 0.6, r1 = 1)
kpAddLabels(kp, labels = substr(interest[2], nchar(interest[2])-1, nchar(interest[2])), r0 = 0.6,
r1 = 1, cex = 0.7, srt = 0, label.margin = 0.01)
kpAxis(kp, ymin = 0, ymax = max_y, r0 = 0, r1 = 0.4, cex = 1, numticks = 4)
kpAxis(kp, ymin = 0, ymax = max_y, r0 = 0.6, r1 = 1, cex = 1, numticks = 4)
}
TTdegs <- c(rownames(TTBowtieDownRegSorted), rownames(TTBowtieUpRegSorted))
TT_genes <- gene_features[gene_features$gene_id %in% TTdegs]
kpTr <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpTr <- kpPlotDensity(kpTr, window.size = 0.5e6, data= TT_genes, data.panel=1, col = "forestgreen", border="forestgreen")
density_dataTr <- kpTr$latest.plot$computed.values
kpGene <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpGene <- kpPlotDensity(kpGene, window.size = 0.5e6, data= gene_features, data.panel=2, col = "steelblue", border="steelblue")
density_dataGene <- kpGene$latest.plot$computed.values
y <- density_dataTr$density/density_dataGene$density
y[is.nan(y)] <- NA
y[is.infinite(y)] <- NA
ratio_gr <- density_dataGene$windows
mcols(ratio_gr)$score <- y
KpGeTR <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpLines(KpGeTR, data=ratio_gr, y=y, col="darkred", lwd=1.5)
TTdegsC1 <- c(rownames(TTC1RemovedUpRegSorted.G), rownames(TTC1RemovedDownRegSorted.G))
TT_genesC1 <- gene_features[gene_features$gene_id %in% TTdegsC1]
kpTr <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpTr <- kpPlotDensity(kpTr, window.size = 0.5e6, data= TT_genesC1, data.panel=1, col = "forestgreen", border="forestgreen")
density_dataTr <- kpTr$latest.plot$computed.values
kpGene <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpGene <- kpPlotDensity(kpGene, window.size = 0.5e6, data= gene_features, data.panel=2, col = "steelblue", border="steelblue")
density_dataGene <- kpGene$latest.plot$computed.values
yC1 <- density_dataTr$density/density_dataGene$density
yC1[is.nan(yC1)] <- NA
yC1[is.infinite(yC1)] <- NA
ratio_grC1 <- density_dataGene$windows
mcols(ratio_grC1)$score <- yC1
KpGeTRc1 <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpLines(KpGeTRc1, data=ratio_grC1, y=yC1, col="darkred", lwd=1.5)
peaksC1 <- GRanges()
for (chr in runValue(seqnames(ratio_grC1))){
subset_gtf <- ratio_grC1[seqnames(ratio_grC1)==chr]
score_vec <- subset_gtf[!is.na(subset_gtf$score)]
min_value <- 0.01
nonzero_scores <- score_vec[score_vec$score > min_value]
quantile_cutoff <- 0.90
threshold <- quantile(nonzero_scores$score,quantile_cutoff)
peaksC1 <- c(peaksC1, nonzero_scores[nonzero_scores$score > threshold & nonzero_scores$score > min_value])
}
dummy <- ratio_grC1
hits <- findOverlaps(dummy, peaksC1, type = "start")
dummy$score <- 0
dummy$score[queryHits(hits)] <- peaksC1$score[subjectHits(hits)]
KpGeTRdummy <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpLines(KpGeTRdummy, data=dummy, y=dummy$score, col="darkgreen", lwd=1.5)
peaks_genes <- mcols(subsetByOverlaps(TT_genesC1, peaksC1, type="within"))$gene_name
writeLines(peaks_genes, "Analysis_image/peaksC1_potential_gene.txt")
peaks <- GRanges()
for (chr in runValue(seqnames(ratio_gr))){
subset_gtf <- ratio_gr[seqnames(ratio_gr)==chr]
score_vec <- subset_gtf[!is.na(subset_gtf$score)]
min_value <- 0.01
nonzero_scores <- score_vec[score_vec$score > min_value]
quantile_cutoff <- 0.90
threshold <- quantile(nonzero_scores$score,quantile_cutoff)
peaks <- c(peaks, nonzero_scores[nonzero_scores$score > threshold & nonzero_scores$score > min_value])
}
dummy2 <- ratio_gr
hits <- findOverlaps(dummy2, peaks, type = "start")
dummy2$score <- 0
dummy2$score[queryHits(hits)] <- peaks$score[subjectHits(hits)]
KpGeTRdummy <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpLines(KpGeTRdummy, data=dummy2, y=dummy2$score, col="darkred", lwd=1.5)
peaks_genes <- mcols(subsetByOverlaps(TT_genesC1, peaks, type="within"))$gene_name
writeLines(peaks_genes, "Analysis_image/peaks_potential_gene.txt")
hits <- findOverlaps(peaks, peaksC1, type = "start")
common_peaks <- peaks[queryHits(hits)]
dummy3 <- ratio_gr
hits <- findOverlaps(dummy3, common_peaks, type = "start")
dummy3$score <- 0
dummy3$score[queryHits(hits)] <- peaks$score[subjectHits(hits)]
KpGeTRdummy <- plotKaryotype(plot.type=1, genome = custom.genome, cytobands = cyto, chromosomes=mus_chrs, cex=1)
kpLines(KpGeTRdummy, data=dummy3, y=dummy3$score, col="steelblue", lwd=1.5)
common_genes <- mcols(subsetByOverlaps(TT_genesC1, common_peaks, type="within"))$gene_name
writeLines(common_genes, "Analysis_image/common_potential_gene.txt")
writeLines(MusGeneNames$gene_name[match(rownames(RnaUpRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_STAR_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(RnaDownRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_STAR_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiUpRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_GENE_PREMRNA_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiDownRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_GENE_PREMRNA_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiTTUpRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_PREMRNA_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiTTDownRegSorted), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_PREMRNA_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiTTUpRegSortedC1), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_PREMRNA_C1REMOVED_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TxiTTDownRegSortedC1), MusGeneNames$gene_id)], "Analysis_image/RNA_SALMON_PREMRNA_C1REMOVED_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(RnaUpRegSortedC1), MusGeneNames$gene_id)], "Analysis_image/RNA_STAR_C1REMOVED_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(RnaDownRegSortedC1), MusGeneNames$gene_id)], "Analysis_image/RNA_STAR_C1REMOVED_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTUpRegSorted), MusGeneNames$gene_id)], "Analysis_image/TT_STAR_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTDownRegSorted), MusGeneNames$gene_id)], "Analysis_image/TT_STAR_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTBowtieUpRegSorted), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTBowtieDownRegSorted), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTC1RemovedUpRegSorted.G), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_C1REMOVED_GENOTYPE_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTC1RemovedDownRegSorted.G), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_C1REMOVED_GENOTYPE_DOWNREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTC1RemovedUpRegSorted.GR), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_C1REMOVED_GENOTYPE_REPLICATE_UPREG.txt")
writeLines(MusGeneNames$gene_name[match(rownames(TTC1RemovedDownRegSorted.GR), MusGeneNames$gene_id)], "Analysis_image/TT_BOWTIE2_C1REMOVED_GENOTYPE_REPLICATE_DOWNREG.txt")
cyto12 <- cyto[seqnames(cyto)=="chr12"]
chr12_gene_name <- mcols(subsetByOverlaps(TT_genes, cyto12[length(cyto12)-1], type = "within"))$gene_name
writeLines(chr12_gene_name, "Analysis_image/chr12_TT_Bowtie_potential_gene.txt")
all_mus_genes <- unique(MusGeneNames$gene_id)
rnaC1_vs_ttC1_up <- cbind(
RNA = all_mus_genes %in% rownames(RnaUpRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedUpRegSorted.G)
)
rownames(rnaC1_vs_ttC1_up) <- all_mus_genes
rnaC1_vs_ttC1_down <- cbind(
RNA = all_mus_genes %in% rownames(RnaDownRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedDownRegSorted.G)
)
rownames(rnaC1_vs_ttC1_down) <- all_mus_genes
vc_up <- vennCounts(rnaC1_vs_ttC1_up)
print(vc_up)
vc_down <- vennCounts(rnaC1_vs_ttC1_down)
print(vc_down)
vennDiagram(vc_up)
vennDiagram(vc_down)
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA,
y = log2FoldChangeTT
)) +
geom_point(size = 1) +
#coord_cartesian(ylim = c(-5, 5)) +
theme_classic() +
geom_density2d(col="red")
RnaTTmergedF2change
RnaTTmergedF2change["ENSMUSG00000000305.12",]
RnaTTmergedF2change[rownames(RnaTTmergedF2change)=="ENSMUSG00000000305.12",]
RnaTTmergedF2change[RnaTTmergedF2change$index=="ENSMUSG00000000305.12",]
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rnaC1_vs_ttC1_up,]
rnaC1_vs_ttC1_up
class(rnaC1_vs_ttC1_up)
rnaC1_vs_ttC1_up[,1]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[1]==TRUE]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[1]=="TRUE"]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[1]="TRUE"]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[1]="TRUE",]
all_mus_genes <- unique(MusGeneNames$gene_id)
rnaC1_vs_ttC1_up <- cbind(
RNA = all_mus_genes %in% rownames(RnaUpRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedUpRegSorted.G)
)
rownames(rnaC1_vs_ttC1_up) <- all_mus_genes
rnaC1_vs_ttC1_up.df <- as.data.frame(rnaC1_vs_ttC1_up)
rnaC1_vs_ttC1_down <- cbind(
RNA = all_mus_genes %in% rownames(RnaDownRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedDownRegSorted.G)
)
rownames(rnaC1_vs_ttC1_down) <- all_mus_genes
rnaC1_vs_ttC1_down.df <- as.data.frame(rnaC1_vs_ttC1_down)
vc_up <- vennCounts(rnaC1_vs_ttC1_up)
print(vc_up)
vc_down <- vennCounts(rnaC1_vs_ttC1_down)
print(vc_down)
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[, 1]]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[, 1],]
rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[, 1] & !rnaC1_vs_ttC1_up[,2],]
all_mus_genes <- unique(MusGeneNames$gene_id)
rnaC1_vs_ttC1_up <- cbind(
RNA = all_mus_genes %in% rownames(RnaUpRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedUpRegSorted.G)
)
rownames(rnaC1_vs_ttC1_up) <- all_mus_genes
rnaC1_vs_ttC1_down <- cbind(
RNA = all_mus_genes %in% rownames(RnaDownRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedDownRegSorted.G)
)
rownames(rnaC1_vs_ttC1_down) <- all_mus_genes
rna_only <- c(rownames(rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & !rnaC1_vs_ttC1_up[,2],]),
rownames(rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & !rnaC1_vs_ttC1_down[,2],]))
tt_only <- c(rownames(!rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & rnaC1_vs_ttC1_up[,2],]),
rownames(!rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & rnaC1_vs_ttC1_down[,2],]))
both_present <- c(rownames(rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & rnaC1_vs_ttC1_up[,2],]),
rownames(rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & rnaC1_vs_ttC1_down[,2],]))
both_present
length(both_present)
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]
RnaTTmergedF2change$presence <- None
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "BOTH"))
RnaTTmergedF2change[order(RnaTTmergedF2change$presence)]
RnaTTmergedF2change
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "BOTH"))
RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT)) +
geom_point(size = 1) +
#coord_cartesian(ylim = c(-5, 5)) +
theme_classic() +
geom_density2d(col="red")
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "BOTH"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "BOTH"))+
theme_classic() +
geom_density2d(col="red")
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "BOTH"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "BOTH"))+
theme_classic() +
geom_density2d(col="red")
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "BOTH"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "BOTH"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "BOTH"))+
theme_classic()
both_present
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both"))+
theme_classic()
sum(RnaTTmergedF2change$index %in% both_present)
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both"), drop = FALSE) +
theme_classic()
table(RnaTTmergedF2change$presence)
tt_only
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]
tt_only==both_present
c(rownames(!rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & rnaC1_vs_ttC1_up[,2],]),
rownames(!rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & rnaC1_vs_ttC1_down[,2],]))
all_mus_genes <- unique(MusGeneNames$gene_id)
rnaC1_vs_ttC1_up <- cbind(
RNA = all_mus_genes %in% rownames(RnaUpRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedUpRegSorted.G)
)
rownames(rnaC1_vs_ttC1_up) <- all_mus_genes
rnaC1_vs_ttC1_down <- cbind(
RNA = all_mus_genes %in% rownames(RnaDownRegSortedC1),
TT = all_mus_genes %in% rownames(TTC1RemovedDownRegSorted.G)
)
rownames(rnaC1_vs_ttC1_down) <- all_mus_genes
rna_only <- c(rownames(rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & !rnaC1_vs_ttC1_up[,2],]),
rownames(rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & !rnaC1_vs_ttC1_down[,2],]))
tt_only <- c(rownames(rnaC1_vs_ttC1_up[!rnaC1_vs_ttC1_up[,1] & rnaC1_vs_ttC1_up[,2],]),
rownames(rnaC1_vs_ttC1_down[!rnaC1_vs_ttC1_down[,1] & rnaC1_vs_ttC1_down[,2],]))
both_present <- c(rownames(rnaC1_vs_ttC1_up[rnaC1_vs_ttC1_up[,1] & rnaC1_vs_ttC1_up[,2],]),
rownames(rnaC1_vs_ttC1_down[rnaC1_vs_ttC1_down[,1] & rnaC1_vs_ttC1_down[,2],]))
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both")) +
theme_classic()
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$Presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$Presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$Presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$Presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$Presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$Presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = Presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both")) +
theme_classic()
RnaTTmergedF2change
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
RnaTTmergedF2change
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
plot(RnaTTmergedF2change$log2FoldChangeRNA, RnaTTmergedF2change$log2FoldChangeTT)
grid()
RnaTTmergedF2change$Presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$Presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$Presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$Presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$Presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$Presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = Presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both")) +
theme_classic()
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
RnaTTmergedF2change$Presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$Presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$Presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$Presence <- "Both"
RnaTTmergedF2change$presence <- factor(RnaTTmergedF2change$Presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$Presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = Presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both")) +
theme_classic()
RnaTTmergedF2change <- merge(data.frame(RnaResNoNa), data.frame(TTResNoNa), by="index", suffixes=c("RNA", "TT"))
RnaTTmergedF2change$Presence <- "None"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% rna_only,]$Presence <- "RNA"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% tt_only,]$Presence <- "TT"
RnaTTmergedF2change[RnaTTmergedF2change$index %in% both_present,]$Presence <- "Both"
RnaTTmergedF2change$Presence <- factor(RnaTTmergedF2change$Presence, levels = c("None", "RNA", "TT", "Both"))
RnaTTmergedF2change <- RnaTTmergedF2change[order(RnaTTmergedF2change$Presence),]
ggplot(RnaTTmergedF2change, aes(x = log2FoldChangeRNA, y = log2FoldChangeTT, col = Presence)) +
geom_point(size = 1) +
scale_color_manual(values = c("black", "steelblue", "darkgreen", "darkred"),
labels = c("None", "RNA", "TT", "Both")) +
theme_classic()
library(limma)
library(tximport)
library(readr)
library(tximportData)
library(DESeq2)
library(ggplot2)
library(GenomicRanges)
library(dplyr)
library(txdbmaker)
library(viridis)
library(patchwork)
library(tidyverse)
library(RColorBrewer)
library(rtracklayer)
library(reshape2)
library(ggrepel)
library(pheatmap)
library(karyoploteR)
renv::init()
renv::activate()
renv::status()
library(limma)
renv::init()
renv::init(force = TRUE)
renv::init()
setwd("~/SCRATCH/fpan/Script/R_script")
renv::activate()
